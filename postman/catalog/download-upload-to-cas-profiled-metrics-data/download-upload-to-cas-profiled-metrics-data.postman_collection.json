{
  "info": {
    "_postman_id": "86e37545-dfc0-4f3d-90d6-8871ceaa727d",
    "name": "download-profiled-metrics-data",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "29808916"
  },
  "item": [
    {
      "name": "0. Get token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if(pm.response.to.have.status(200)){",
              "    console.log(\"response.status = \" +pm.response.status)",
              "    var jsonData = JSON.parse(responseBody);",
              "    postman.setEnvironmentVariable(\"bearerToken\", jsonData.access_token);",
              "    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
              "}",
              " ",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Basic c2FzLmVjOg=="
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "grant_type",
              "value": "password",
              "type": "default"
            },
            {
              "key": "username",
              "value": "{{username}}",
              "type": "default"
            },
            {
              "key": "password",
              "value": "{{password}}",
              "type": "default"
            }
          ]
        },
        "url": {
          "raw": "{{sasserver}}/SASLogon/oauth/token",
          "host": ["{{sasserver}}"],
          "path": ["SASLogon", "oauth", "token"]
        }
      },
      "response": []
    },
    {
      "name": "1. Create Discovery Agent",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.to.have.status(201)) {",
              "    var jsonData = JSON.parse(responseBody);",
              "    postman.setEnvironmentVariable(\"botId\", jsonData.id);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "type": "text",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"provider\": \"TABLE-BOT\",\n    \"name\": \"Crawl Samples Use Case (CAS)\",\n    \"description\": \"Crawl the Samples caslib\",\n    \"parameters\": {\n    \t\"datasourceURI\": \n    \t\"/dataSources/providers/cas/sources/cas-shared-default~fs~Samples\",\n        \"region\": \"US NC\"\n    },\n\t\"jobParameters\": {\n\t\t\"correlateColumns\": \"1\",\n\t\t\"discoverOutliers\": \"1\",\n        \"mineForKeywords\":\"1\",\n        \"getNLPSemanticID\":\"1\"\n\t}\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{sasserver}}/catalog/bots",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "bots"]
        }
      },
      "response": []
    },
    {
      "name": "2. Run Discovery Agent",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [
          {
            "key": "Accept",
            "type": "text",
            "value": "text/plain"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/bots/{{botId}}/state?value=running",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "bots", "{{botId}}", "state"],
          "query": [
            {
              "key": "value",
              "value": "running"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "3. Discovery Agent state",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const maxRetries = 10; // max number of tries\r",
              "const sleepBetweenTries = 5000; // interval between attempts\r",
              "\r",
              "if (!pm.environment.get(\"tries\")) {\r",
              "    pm.environment.set(\"tries\", 1);\r",
              "}\r",
              "\r",
              "const state = \"\"\r",
              "pm.environment.set(\"state\",pm.response.text());\r",
              "console.log (\"state = \" + pm.environment.get(\"state\"));\r",
              "\r",
              "if ((pm.environment.get(\"state\") === \"running\") && (pm.environment.get(\"tries\") < maxRetries))\r",
              "{\r",
              "    var tries = parseInt(pm.environment.get(\"tries\"), 10);\r",
              "    console.log(\"tries = \" + tries)\r",
              "    pm.environment.set(\"tries\", tries + 1);\r",
              "    setTimeout(function() {}, sleepBetweenTries);\r",
              "    postman.setNextRequest(request.name); // retry the current request\r",
              "}\r",
              "else\r",
              "{\r",
              "    console.log (\"remove tries variable\")\r",
              "    pm.environment.unset(\"tries\");\r",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/plain",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/bots/{{botId}}/state",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "bots", "{{botId}}", "state"]
        }
      },
      "response": []
    },
    {
      "name": "4. Discovery Agent",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.to.have.status(200)) {\r",
              "    postman.setEnvironmentVariable(\"botEtag\", postman.getResponseHeader(\"ETag\"));\r",
              "    var jsonData = JSON.parse(responseBody);\r",
              "    postman.setEnvironmentVariable(\"botId\", jsonData.id);\r",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.bot+json",
            "type": "text",
            "disabled": true
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.bot.summary+json",
            "type": "text",
            "disabled": true
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.scheduled.bot+json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.summary+json",
            "type": "text",
            "disabled": true
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/bots/{{botId}}",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "bots", "{{botId}}"]
        }
      },
      "response": []
    },
    {
      "name": "5. Download dataDictionary filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/csv",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=contains(name,COST)&level=dataDictionary&prefix=simpledownload",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "contains(name,COST)"
            },
            {
              "key": "level",
              "value": "dataDictionary"
            },
            {
              "key": "prefix",
              "value": "simpledownload"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "6. Download dataDictionary, multiple tables filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/csv",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=or(contains(name,COST),contains(name,WARRANTY))&level=dataDictionary&prefix=multipletables",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "or(contains(name,COST),contains(name,WARRANTY))"
            },
            {
              "key": "level",
              "value": "dataDictionary"
            },
            {
              "key": "prefix",
              "value": "multipletables"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "7. Download dataDictionary, filtered by name, prefix and dateTimeStampSuffix set to false",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/csv",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=or(contains(name,COST),contains(name,WARRANTY))&level=dataDictionary&prefix=multipletables_nodatetimesuffix&dateTimeStampSuffix=false",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "or(contains(name,COST),contains(name,WARRANTY))"
            },
            {
              "key": "level",
              "value": "dataDictionary"
            },
            {
              "key": "prefix",
              "value": "multipletables_nodatetimesuffix"
            },
            {
              "key": "dateTimeStampSuffix",
              "value": "false"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "8. Download detailedMetrics filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "text/csv",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=contains(name,COST)&level=detailedMetrics&prefix=detailedmetrics_costTable",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "contains(name,COST)"
            },
            {
              "key": "level",
              "value": "detailedMetrics"
            },
            {
              "key": "prefix",
              "value": "detailedmetrics_costTable"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "9. Download profile Metrics filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const maxRetries = 10; // max number of tries\r",
              "const sleepBetweenTries = 5000; // interval between attempts\r",
              "\r",
              "if (!pm.environment.get(\"tries\")) {\r",
              "    pm.environment.set(\"tries\", 1);\r",
              "}\r",
              "\r",
              "const state = \"\"\r",
              "pm.environment.set(\"state\",pm.response.text());\r",
              "console.log (\"state = \" + pm.environment.get(\"state\"));\r",
              "\r",
              "if ((pm.environment.get(\"state\") === \"running\") && (pm.environment.get(\"tries\") < maxRetries))\r",
              "{\r",
              "    var tries = parseInt(pm.environment.get(\"tries\"), 10);\r",
              "    console.log(\"tries = \" + tries)\r",
              "    pm.environment.set(\"tries\", tries + 1);\r",
              "    setTimeout(function() {}, sleepBetweenTries);\r",
              "    postman.setNextRequest(request.name); // retry the current request\r",
              "}\r",
              "else\r",
              "{\r",
              "    console.log (\"remove tries variable\")\r",
              "    pm.environment.unset(\"tries\");\r",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "text/csv",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"level\": \"detailedMetrics\",\r\n    \"prefix\": \"detailedMetrics_all_table_upload\",\r\n    \"dateTimeStampSuffix\": true,\r\n    \"serverName\": \"cas-shared-default\",\r\n    \"caslibName\": \"Public\"\r\n}"
        },
        "url": {
          "raw": "{{sasserver}}/catalog/instances?filter=contains(name,COST)&level=dataDictionaryAndProfile&prefix=cost_dataDictionaryAndProfile",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances"],
          "query": [
            {
              "key": "filter",
              "value": "contains(name,COST)"
            },
            {
              "key": "level",
              "value": "dataDictionaryAndProfile"
            },
            {
              "key": "prefix",
              "value": "cost_dataDictionaryAndProfile"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "10. Upload dataDictionary to CAS filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"level\": \"dataDictionary\",\r\n    \"prefix\": \"dataDictionary_cost_table_upload\",\r\n    \"dateTimeStampSuffix\": true,\r\n    \"serverName\": \"cas-shared-default\",\r\n    \"caslibName\": \"Public\"\r\n}"
        },
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=contains(name,COST)",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "contains(name,COST)"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "11. Upload detailedMetrics to CAS filtered by name with prefix",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const maxRetries = 10; // max number of tries\r",
              "const sleepBetweenTries = 5000; // interval between attempts\r",
              "\r",
              "if (!pm.environment.get(\"tries\")) {\r",
              "    pm.environment.set(\"tries\", 1);\r",
              "}\r",
              "\r",
              "const state = \"\"\r",
              "pm.environment.set(\"state\",pm.response.text());\r",
              "console.log (\"state = \" + pm.environment.get(\"state\"));\r",
              "\r",
              "if ((pm.environment.get(\"state\") === \"running\") && (pm.environment.get(\"tries\") < maxRetries))\r",
              "{\r",
              "    var tries = parseInt(pm.environment.get(\"tries\"), 10);\r",
              "    console.log(\"tries = \" + tries)\r",
              "    pm.environment.set(\"tries\", tries + 1);\r",
              "    setTimeout(function() {}, sleepBetweenTries);\r",
              "    postman.setNextRequest(request.name); // retry the current request\r",
              "}\r",
              "else\r",
              "{\r",
              "    console.log (\"remove tries variable\")\r",
              "    pm.environment.unset(\"tries\");\r",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"level\": \"detailedMetrics\",\r\n    \"prefix\": \"detailedMetrics_cost_table_upload\",\r\n    \"dateTimeStampSuffix\": true,\r\n    \"serverName\": \"cas-shared-default\",\r\n    \"caslibName\": \"Public\"\r\n}"
        },
        "url": {
          "raw": "{{sasserver}}/catalog/instances/?filter=contains(name,COST)",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances", ""],
          "query": [
            {
              "key": "filter",
              "value": "contains(name,COST)"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "12. Upload profileMetrics to CAS with filter all data in the Samples discovery agent crawled library",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/vnd.sas.metadata.instance.upload.request+json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"level\": \"dataDictionaryAndProfile\",\r\n    \"prefix\": \"all_tables_samples_dataDictionaryAndProfile_upload\",\r\n    \"dateTimeStampSuffix\": true,\r\n    \"serverName\": \"cas-shared-default\",\r\n    \"caslibName\": \"Public\"\r\n}"
        },
        "url": {
          "raw": "{{sasserver}}/catalog/instances?filter=contains(resourceId,'cas~fs~cas-shared-default~fs~Samples')",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "instances"],
          "query": [
            {
              "key": "filter",
              "value": "contains(resourceId,'cas~fs~cas-shared-default~fs~Samples')"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "13. Delete Discovery Agent",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{sasserver}}/catalog/bots/{{botId}}",
          "host": ["{{sasserver}}"],
          "path": ["catalog", "bots", "{{botId}}"]
        }
      },
      "response": []
    }
  ]
}
